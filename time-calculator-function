def add_time(start, duration, day=None):
  if day is None:
    return (start, duration)
  else:
    return (start, duration, day)

  S_sep = start.find(":")
  S_hour = int(start[:S_sep])
  S_min = int(start[S_sep + 1:-3])
  S_day = start[-2]
  day = day.lower()

  if "PM" in start and S_hour != 12:
    S_hour += 12
  if "AM" in start and S_hour == 12:
    S_hour -= 12

  # defines duration format:
  D_sep = duration.find(":")
  D_hour = int(duration[:D_sep])
  D_min = int(duration[D_sep + 1:])

  #Sums start and duration
  N_hour = S_hour + D_hour
  #Counts the total n hours (because further N_hour is changed)
  T_hour = S_hour + D_hour
  N_min = S_min + D_min
  #Change hour if minutes more than 60
  if N_min >= 60:
    N_hour += 1
    N_min -= 60
  #error if user inputs more than 60 minutes
  if D_min > 59:
    print("Minutes must be less then 60")
    quit()
  #count days after start
  N_D_later = N_hour // 24

  #Defines days to be displayed
  week = [
    "monday", "tuesday", "wednesday", "thursday", "friday", "saturday",
    "sunday"
  ]

  N_day = week[(week.index(day) + N_D_later) % len(week)]

  #Difines shift to be displayed
  N_hour = N_hour % 24

  if N_hour == 0:
    N_hour = 12
    N_time = "AM"
  elif N_hour < 12:
    N_time = "AM"
  else:
    N_hour = N_hour % 12
    N_time = "PM"

  #Code was showwing 12PM as 00
  if N_hour == 0:
    N_hour = 12

  #return if statements
  if day is None:
    new_time = f"{N_hour}:{'%02d' % N_min} {N_time}"
    print(new_time)
  elif T_hour - 24 < 0 and day is not None:
    new_time = f"{N_hour}:{'%02d' % N_min} {N_time} {N_day.title()}"
    print(new_time)
  elif T_hour - 47 < 0 and day is not None:
    new_time = f"{N_hour}:{'%02d' % N_min} {N_time}, {N_day.title()} (next day)"
    print(new_time)
  elif T_hour > 47 and day is not None:
    new_time = f"{N_hour}:{'%02d' % N_min} {N_time}, {N_day.title()} ({N_D_later} days later)"
    print(new_time)

  return new_time
